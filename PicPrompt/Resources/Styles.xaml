<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PicPrompt.Resources"
                    xmlns:c="clr-namespace:PicPrompt.Resources.Controls">
    <!-- Window -->
    <Style x:Key="NativeWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="#FF131313"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="7,7,7,5">
                        <Border 
                            x:Name="Border"
                            Background="{TemplateBinding Background}">
                            <DockPanel>
                                <Rectangle
                                    Fill="#05FFFFFF"
                                    Height="32"
                                    DockPanel.Dock="Top"/>
                                <ContentPresenter/>
                            </DockPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="15"
                                        Opacity="0.20"
                                        ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="32"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="7"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label -->
    <Style x:Key="LabelButtonStyle" TargetType="{x:Type Label}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                            To="#FFDADADA"
                            Duration="0:0:0:0.15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                            To="Gray"
                            Duration="0:0:0:0.15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                            To="White"
                            Duration="0:0:0:0.15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"
                            To="#FFDADADA"
                            Duration="0:0:0:0.15"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Button -->
    <Style TargetType="c:Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Toggle Button -->
    <Style TargetType="c:ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding BorderBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Width="20" Height="20"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1">
                            <Grid>
                                <Path
                                    x:Name="Check" 
                                    Fill="White" 
                                    Width="12" Height="12"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{DynamicResource IconCheck}"
                                    Stretch="Fill"/>
                                <Rectangle 
                                    x:Name="Disable" 
                                    Fill="#3F747474"/>
                            </Grid>
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="Disable" Property="Fill" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Check" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>